# 객체지향 없이 계산기 만들어 보기

def add(v1, v2)
    return v1+v2
end

def subtract(v1, v2)
    return v1-v2
end

p add(10, 10) # 1. 다른 함수에서 같이 사용하는 값에 대한 관련성은 모른다.
p subtract(10, 10)
p add(30, 20)
p subtract(30, 20)


num1 = 10
num2 = 10
num3 = 30
num4 = 20

p add(num1, num2) # 2. 이렇게 하면 관련성을 알수 있고 유지보수도 할수 있지만 코드가 길어지고 커짐 
p subtract(num1, num2)
p add(num3, num4)
p subtract(num3, num4)

# 객체 지향 사용시 객체의 확인 작업과 지정 작업이 들어감
# 프로그램이 커질경우 복잡도를 낮추기 위해서 객체 지향이 필요함
# 그리고 객체 지향시 소속확인을 통해 관련성을 알수 있다.
# 값에 대한 처리에 대한 의미가 분명하게 드러남
# 복잡한 상태의 프로그램일 경우, 안전하게 값을 저장하고 있기 때문에 영향을 덜 받는다.


# data 는 중요하다. 가치있기에 변수보존이 중요하기 때문